<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.LikeMapper">

    <sql id="Base_Column_List">
        likeId,userId,newsId,postId,createTime
    </sql>

    <insert id="insert" parameterType="com.example.entity.Likes" useGeneratedKeys="true" keyProperty="likeId">
        insert into likes
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="likeId != null">likeId,</if>
            <if test="userId != null">userId,</if>
            <if test="newsId != null">newsId,</if>
            <if test="postId != null">postId,</if>
            <if test="createTime != null">createTime,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="likeId != null">#{likeId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="newsId != null">#{newsId},</if>
            <if test="postId != null">#{postId},</if>
            <if test="createTime != null">#{createTime},</if>
        </trim>
    </insert>

    <select id="selectAll" resultType="com.example.entity.Likes">
        select
        <include refid="Base_Column_List"></include>
        from likes
            <where>
                <if test="userId != null">and userId = #{userId}</if>
                <if test="postId != null">and postId = #{postId}</if>
                <if test="newsId != null">and newsId = #{newsId}</if>
            </where>
    </select>

    <select id="selectByNews" resultType="com.example.entity.Likes">
        select
        <include refid="Base_Column_List"></include>
        from likes
        where userId = #{userId} and newsId = #{newsId}
    </select>

    <select id="selectByPost" resultType="com.example.entity.Likes">
        select
        <include refid="Base_Column_List"></include>
        from likes
        where userId = #{userId} and postId = #{postId}
    </select>

    <delete id="deleteByNews">
        DELETE
        FROM
            `xm-retirement`.`likes`
        WHERE
            `userId` = #{userId} AND newsId = #{newsId}
    </delete>

    <delete id="deleteByPost">
        DELETE
        FROM
            `xm-retirement`.`likes`
        WHERE
            `userId` = #{userId} AND postId = #{postId}
    </delete>

</mapper>
